"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2431],{970:function(r,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return f}});var t=n(7462),a=n(3366),o=n(7294),l=n(3905),g=n(1736);function i(){var r=(0,o.useRef)(null);return(0,o.useEffect)((function(){var e=r.current.getContext("webgl"),n=e.createShader(e.VERTEX_SHADER);e.shaderSource(n,"\n      attribute vec2 position;\n\n      void main() {\n        gl_PointSize = 1.0;\n        gl_Position = vec4(position, 1.0, 1.0);\n      }\n    "),e.compileShader(n);var t=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(t,"\n      precision mediump float;\n\n      void main() {\n        gl_FragColor = vec4(0.5, 0.5, 0.5, 1.0);\n      }\n    "),e.compileShader(t);var a=e.createProgram();e.attachShader(a,n),e.attachShader(a,t),e.linkProgram(a),e.useProgram(a);var o=new Float32Array([-1,-1,0,1,1,-1]),l=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,l),e.bufferData(e.ARRAY_BUFFER,o,e.STATIC_DRAW);var g=e.getAttribLocation(a,"position");e.vertexAttribPointer(g,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(g),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLES,0,o.length/2)}),[]),o.createElement("canvas",{ref:r})}function c(){var r=(0,o.useRef)(null);return(0,o.useEffect)((function(){var e=r.current.getContext("webgl"),n=e.createShader(e.VERTEX_SHADER);e.shaderSource(n,"\n      attribute vec2 position;\n      varying vec3 color;\n\n      void main() {\n        gl_PointSize = 1.0;\n        color = vec3(0.5 + position * 0.5, 0.0);\n        gl_Position = vec4(position * 0.5, 1.0, 1.0);\n      }\n    "),e.compileShader(n);var t=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(t,"\n      precision mediump float;\n      varying vec3 color;\n\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n      }\n    "),e.compileShader(t);var a=e.createProgram();e.attachShader(a,n),e.attachShader(a,t),e.linkProgram(a),e.useProgram(a);var o=new Float32Array([-1,-1,0,1,1,-1]),l=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,l),e.bufferData(e.ARRAY_BUFFER,o,e.STATIC_DRAW);var g=e.getAttribLocation(a,"position");e.vertexAttribPointer(g,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(g),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLES,0,o.length/2)}),[]),o.createElement("canvas",{ref:r})}var s=["components"],u={title:"webgl \u7ed8\u56fe\u57fa\u7840\u6d41\u7a0b",tags:["webgl"]},m=void 0,d={permalink:"/en/2021/02/09/webgl-starter",source:"@site/blog/2021-02-09-webgl-starter/index.mdx",title:"webgl \u7ed8\u56fe\u57fa\u7840\u6d41\u7a0b",description:"webgl \u7ed8\u5236\u56fe\u5f62\u7684\u57fa\u672c\u6d41\u7a0b\uff1a",date:"2021-02-09T00:00:00.000Z",formattedDate:"February 9, 2021",tags:[{label:"webgl",permalink:"/en/tags/webgl"}],readingTime:2.065,truncated:!0,authors:[],frontMatter:{title:"webgl \u7ed8\u56fe\u57fa\u7840\u6d41\u7a0b",tags:["webgl"]},prevItem:{title:"\u9762\u5411\u6a21\u677f\u751f\u6210\u7684 cli \u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u6280\u672f\u8bbe\u8ba1",permalink:"/en/2021/10/27/cli-for-template"},nextItem:{title:"\u9762\u8bd5\u7f16\u7a0b\u9898",permalink:"/en/2021/01/15/program-question"}},p={authorsImageUrls:[]},f=[],v={toc:f};function h(r){var e=r.components,n=(0,a.Z)(r,s);return(0,l.kt)("wrapper",(0,t.Z)({},v,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"webgl \u7ed8\u5236\u56fe\u5f62\u7684\u57fa\u672c\u6d41\u7a0b\uff1a\n\u521b\u5efa webgl \u4e0a\u4e0b\u6587 -> \u521b\u5efa webgl \u7a0b\u5e8f -> \u6570\u636e\u5b58\u5165\u7f13\u51b2\u533a -> \u5c06\u7f13\u51b2\u533a\u6570\u636e\u8bfb\u53d6\u5230 GPU -> GPU \u6267\u884c webgl \u7a0b\u5e8f"),(0,l.kt)("h1",{id:"\u521b\u5efa-webgl-\u4e0a\u4e0b\u6587"},"\u521b\u5efa webgl \u4e0a\u4e0b\u6587"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const canvas = document.querySelector('canvas')\nconst gl = canvas.getContext('webgl');\n")),(0,l.kt)("h1",{id:"\u521b\u5efa-webgl-\u7a0b\u5e8f"},"\u521b\u5efa webgl \u7a0b\u5e8f"),(0,l.kt)("p",null,"webgl \u7ed8\u56fe\u8fc7\u7a0b\u9700\u8981\u4e24\u4e2a\u7740\u8272\u5668\uff1a\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u5143\u7740\u8272\u5668\uff0c\u5206\u522b\u5904\u7406\u56fe\u5f62\u7684\u9876\u70b9\u4fe1\u606f\u548c\u50cf\u7d20\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const vertex = `\n  attribute vec2 position;\n\n  void main() {\n    gl_PointSize = 1.0;\n    gl_Position = vec4(position, 1.0, 1.0);\n  }\n`;\n\nconst fragment = `\n  precision mediump float;\n\n  void main() {\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n  }\n`;\n")),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u4f7f\u7528\u4e0a\u9762\u521b\u5efa\u597d\u7684\u7740\u8272\u5668\u521b\u5efa shader \u5bf9\u8c61"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const vertexShader = gl.createShader(gl.VERTEX_SHADER);\ngl.shaderSource(vertexShader, vertex);\ngl.compileShader(vertexShader);\n\nconst fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\ngl.shaderSource(fragmentShader, fragment);\ngl.compileShader(fragmentShader);\n")),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u5c06 shader \u5173\u8054\u5230 webgl \u7a0b\u5e8f\u4e2d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const program = gl.createProgram();\ngl.attachShader(program, vertexShader);\ngl.attachShader(program, fragmentShader);\ngl.linkProgram(program);\n")),(0,l.kt)("p",null,"\u6700\u540e\uff0c\u542f\u7528\u8be5 program \u5bf9\u8c61"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"gl.useProgram(program);\n")),(0,l.kt)("h1",{id:"\u6570\u636e\u5b58\u5165\u7f13\u51b2\u533a"},"\u6570\u636e\u5b58\u5165\u7f13\u51b2\u533a"),(0,l.kt)("p",null,"\u4f7f\u7528 Float32Array \u5b9a\u4e49\u4e09\u89d2\u5f62\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u5e76\u5c06\u5b9a\u4e49\u597d\u7684\u6570\u636e\u5199\u5165\u5230 webgl \u7684\u7f13\u51b2\u533a\u4e2d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const points = new Float32Array([\n  -1, -1,\n  0, 1,\n  1, -1,\n]);\n\nconst bufferId = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\ngl.bufferData(gl.ARRAY_BUFFER, points, gl.STATIC_DRAW);\n")),(0,l.kt)("h1",{id:"\u5c06\u7f13\u51b2\u533a\u6570\u636e\u8bfb\u53d6\u5230-gpu"},"\u5c06\u7f13\u51b2\u533a\u6570\u636e\u8bfb\u53d6\u5230 GPU"),(0,l.kt)("p",null,"\u5c06 buffer \u4e2d\u7684\u6570\u636e\u7ed1\u5b9a\u7ed9\u9876\u70b9\u7740\u8272\u5668\u7684 position \u53d8\u91cf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const vPosition = gl.getAttribLocation(program, 'position');\ngl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0);\ngl.enableVertexAttribArray(vPosition);\n")),(0,l.kt)("h1",{id:"gpu-\u6267\u884c-webgl-\u7a0b\u5e8f"},"GPU \u6267\u884c webgl \u7a0b\u5e8f"),(0,l.kt)("p",null,"\u6e05\u7a7a\u753b\u5e03\uff0c\u6267\u884c\u7ed8\u5236\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"gl.clear(gl.COLOR_BUFFER_BIT);\ngl.drawArrays(gl.TRIANGLES, 0, points.length / 2);\n")),(0,l.kt)("h1",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)(i,{mdxType:"Example"}),(0,l.kt)(g.Z,{className:"language-jsx",mdxType:"CodeBlock"},'import React, { useEffect, useRef } from "react";\r\n\r\nfunction Example() {\r\n  const canvasEl = useRef(null);\r\n  useEffect(() => {\r\n    const gl = canvasEl.current.getContext("webgl");\r\n\r\n    const vertex = `\r\n      attribute vec2 position;\r\n\r\n      void main() {\r\n        gl_PointSize = 1.0;\r\n        gl_Position = vec4(position, 1.0, 1.0);\r\n      }\r\n    `;\r\n\r\n    const fragment = `\r\n      precision mediump float;\r\n\r\n      void main() {\r\n        gl_FragColor = vec4(0.5, 0.5, 0.5, 1.0);\r\n      }\r\n    `;\r\n\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, vertex);\r\n    gl.compileShader(vertexShader);\r\n\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragment);\r\n    gl.compileShader(fragmentShader);\r\n\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    gl.useProgram(program);\r\n\r\n    const points = new Float32Array([-1, -1, 0, 1, 1, -1]);\r\n\r\n    const bufferId = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\r\n    gl.bufferData(gl.ARRAY_BUFFER, points, gl.STATIC_DRAW);\r\n\r\n    const vPosition = gl.getAttribLocation(program, "position");\r\n    gl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(vPosition);\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawArrays(gl.TRIANGLES, 0, points.length / 2);\r\n  }, []);\r\n\r\n  return <canvas ref={canvasEl} />;\r\n}\r\n\r\nexport { Example };\r\n'),(0,l.kt)("h1",{id:"\u4f7f\u7528-varying-\u53d8\u91cf\u4f20\u503c"},"\u4f7f\u7528 varying \u53d8\u91cf\u4f20\u503c"),(0,l.kt)("p",null,"\u9876\u70b9\u7740\u8272\u5668\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7 varying \u53d8\u91cf\u4f20\u9012\u7ed9\u7247\u5143\u7740\u8272\u5668"),(0,l.kt)(c,{mdxType:"Varying"}),(0,l.kt)(g.Z,{className:"language-jsx",mdxType:"CodeBlock"},'import React, { useEffect, useRef } from "react";\r\n\r\nfunction Varying() {\r\n  const canvasEl = useRef(null);\r\n  useEffect(() => {\r\n    const gl = canvasEl.current.getContext("webgl");\r\n\r\n    const vertex = `\r\n      attribute vec2 position;\r\n      varying vec3 color;\r\n\r\n      void main() {\r\n        gl_PointSize = 1.0;\r\n        color = vec3(0.5 + position * 0.5, 0.0);\r\n        gl_Position = vec4(position * 0.5, 1.0, 1.0);\r\n      }\r\n    `;\r\n\r\n    const fragment = `\r\n      precision mediump float;\r\n      varying vec3 color;\r\n\r\n      void main() {\r\n        gl_FragColor = vec4(color, 1.0);\r\n      }\r\n    `;\r\n\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, vertex);\r\n    gl.compileShader(vertexShader);\r\n\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragment);\r\n    gl.compileShader(fragmentShader);\r\n\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    gl.useProgram(program);\r\n\r\n    const points = new Float32Array([\r\n      -1, -1,\r\n      0, 1,\r\n      1, -1,\r\n    ]);\r\n\r\n    const bufferId = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\r\n    gl.bufferData(gl.ARRAY_BUFFER, points, gl.STATIC_DRAW);\r\n\r\n    const vPosition = gl.getAttribLocation(program, \'position\');\r\n    gl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(vPosition);\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.drawArrays(gl.TRIANGLES, 0, points.length / 2);\r\n  }, []);\r\n\r\n  return <canvas ref={canvasEl} />;\r\n}\r\n\r\nexport { Varying };\r\n'))}h.isMDXComponent=!0}}]);